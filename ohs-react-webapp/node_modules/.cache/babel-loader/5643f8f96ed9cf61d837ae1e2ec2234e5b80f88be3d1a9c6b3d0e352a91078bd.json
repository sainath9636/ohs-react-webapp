{"ast":null,"code":"var _jsxFileName = \"/home/mis/Documents/atlantis-react-8.0.1/javascript/src/components/TreeDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tree } from 'primereact/tree';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport NodeService from '../service/NodeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeDemo = () => {\n  _s();\n  const [treeNodes, setTreeNodes] = useState([]);\n  const [selectedTreeNodeKeys, setSelectedTreeNodeKeys] = useState(null);\n  const [treeTableNodes, setTreeTableNodes] = useState([]);\n  const [selectedTreeTableNodeKeys, setSelectedTreeTableNodeKeys] = useState([]);\n  useEffect(() => {\n    const nodeService = new NodeService();\n    nodeService.getTreeNodes().then(data => setTreeNodes(data));\n    nodeService.getTreeTableNodes().then(data => setTreeTableNodes(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tree, {\n          value: treeNodes,\n          selectionMode: \"checkbox\",\n          selectionKeys: selectedTreeNodeKeys,\n          onSelectionChange: e => setSelectedTreeNodeKeys(e.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"TreeTable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TreeTable, {\n          value: treeTableNodes,\n          header: \"FileSystem\",\n          selectionMode: \"checkbox\",\n          selectionKeys: selectedTreeTableNodeKeys,\n          onSelectionChange: e => setSelectedTreeTableNodeKeys(e.value),\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"name\",\n            header: \"Name\",\n            expander: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"size\",\n            header: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"type\",\n            header: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(TreeDemo, \"4y8kYQj6Dw0n/qRRYPP+e10kpiQ=\");\n_c = TreeDemo;\nexport default TreeDemo;\nvar _c;\n$RefreshReg$(_c, \"TreeDemo\");","map":{"version":3,"names":["React","useState","useEffect","Tree","TreeTable","Column","NodeService","jsxDEV","_jsxDEV","TreeDemo","_s","treeNodes","setTreeNodes","selectedTreeNodeKeys","setSelectedTreeNodeKeys","treeTableNodes","setTreeTableNodes","selectedTreeTableNodeKeys","setSelectedTreeTableNodeKeys","nodeService","getTreeNodes","then","data","getTreeTableNodes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","selectionMode","selectionKeys","onSelectionChange","e","header","field","expander","_c","$RefreshReg$"],"sources":["/home/mis/Documents/atlantis-react-8.0.1/javascript/src/components/TreeDemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tree } from 'primereact/tree';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport NodeService from '../service/NodeService';\n\nconst TreeDemo = () => {\n    const [treeNodes, setTreeNodes] = useState([]);\n    const [selectedTreeNodeKeys, setSelectedTreeNodeKeys] = useState(null);\n    const [treeTableNodes, setTreeTableNodes] = useState([]);\n    const [selectedTreeTableNodeKeys, setSelectedTreeTableNodeKeys] = useState([]);\n\n    useEffect(() => {\n        const nodeService = new NodeService();\n        nodeService.getTreeNodes().then((data) => setTreeNodes(data));\n        nodeService.getTreeTableNodes().then((data) => setTreeTableNodes(data));\n    }, []);\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Tree</h5>\n                    <Tree value={treeNodes} selectionMode=\"checkbox\" selectionKeys={selectedTreeNodeKeys} onSelectionChange={(e) => setSelectedTreeNodeKeys(e.value)} />\n                </div>\n            </div>\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>TreeTable</h5>\n                    <TreeTable value={treeTableNodes} header=\"FileSystem\" selectionMode=\"checkbox\" selectionKeys={selectedTreeTableNodeKeys} onSelectionChange={(e) => setSelectedTreeTableNodeKeys(e.value)}>\n                        <Column field=\"name\" header=\"Name\" expander />\n                        <Column field=\"size\" header=\"Size\" />\n                        <Column field=\"type\" header=\"Type\" />\n                    </TreeTable>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TreeDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}